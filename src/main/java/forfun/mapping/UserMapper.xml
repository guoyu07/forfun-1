<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="forfun.dao.UserMapper">
	<resultMap id="BaseResultMap" type="forfun.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
		<result column="locked" property="locked" jdbcType="BOOLEAN" />
	</resultMap>
	<sql id="Base_Column_List">
		id, username, password, salt , locked
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="forfun.model.User">
		insert into sys_user (id, username, password, salt, locked)
		values (#{id,jdbcType=INTEGER},#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
		#{locked,jdbcType=BOOLEAN})
	</insert>
	<insert id="insertSelective" parameterType="forfun.model.User">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="locked != null">
				locked,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				#{locked,jdbcType=BOOLEAN},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="forfun.model.User">
		update sys_user
		<set>
			<if test="username != null">
				username = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				locked = #{locked,jdbcType=BOOLEAN},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="forfun.model.User">
		update sys_user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		locked = #{locked,jdbcType=BOOLEAN},
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where username = #{username,jdbcType=VARCHAR}
	</select>
	
	<select id="findRolesByUsername" resultType="java.lang.String" parameterType="java.lang.String">
		select  r.role from  sys_role r left join sys_user_role ur  on ur.roleid = r.id
		left join sys_user u on  ur.userid = u.id  where u.username = #{username,jdbcType=VARCHAR}
	</select>
	
	<select id="findPermissionsByUsername" resultType="java.lang.String" parameterType="java.lang.String">
		select  re.permission from  sys_resource re left join sys_role_resource rr on rr.resourceid = re.id
		left join sys_user_role ur on ur.roleid = rr.roleid left join sys_user u on u.id = ur.userid
		where u.username = #{username,jdbcType=VARCHAR}
	</select>
	
</mapper>